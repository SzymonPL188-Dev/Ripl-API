{
  "version": 3,
  "sources": ["../SystemBot.ts"],
  "sourcesContent": ["import { io, db } from \"./index\";\nimport { messageCache, ReplitUserData } from \"./Connection\";\nimport { Socket } from \"socket.io\";\nimport { getBot, resetBot, renameBot } from \"./BotRegistry\";\n\nconst prefix = \"!\";\n\nexport interface MessageData {\n  content: string;\n  sender: string;\n  senderImage: string;\n  timestamp: number;\n  bot: boolean;\n}\n\nexport function chat(message: string) {\n  const m = {\n    content: message,\n    sender: \"Ripl\",\n    senderImage: \"https://ripl-filestorage.szymonpl188.repl.co/logo\",\n    timestamp: Date.now()\n  }\n  io.emit(\"message\", m);\n  messageCache.push(m);\n}\n\nlet tips = [\n  \"You can use `!simon-says <message>` to make me speak\",\n  \"You can use markdown to style your messages eg.  `# hello world`\",\n  \"You can make your own bots: [Click here to see a example](https://replit.com/@SzymonPL188/Ripl-Bot-Example)\",\n  \"You can use `!help` to get a list of commands\",\n  \"The [example bot](https://replit.com/@SzymonPL188/Ripl-Bot-Example#Tutorial.md) responds with *I love you* when your message has the word `love` in it\",\n  \"You can mention people using the `@` symbol eg. `@Example`\"\n]\n\nconst commands = {\n  \"help\": \"Displays this\",\n  \"simon-says <message>\": \"Says the message you entered\",\n  \"tip\": \"Displays a random tip\",\n  \"bot help\": \"Shows bot commands\"\n}\n\nconst botCommands = {\n  \"bot help\": \"Displays this\",\n  \"bot\": \"Shows you your bot token\",\n  \"bot rename <name>\": \"Renames your bot\",\n  \"bot reset\": \"Resets your bot token\",\n  \"bot info\": \"Shows information about your bot (name, creator, id)\",\n}\n\nexport function privChat(message: string, socket: Socket) {\n  const m = {\n    content: message,\n    sender: \"Ripl\",\n    senderImage: \"https://ripl-filestorage.szymonpl188.repl.co/logo\",\n    timestamp: Date.now(),\n    bot: false\n  }\n  socket.emit(\"message\", m);\n}\n\nexport async function onMessage(message: MessageData, sender: Socket, auth: ReplitUserData) {\n  if(!message.content.startsWith(prefix)) return;\n  let args = message.content.substring(1).split(\" \");\n  let command = args.shift();\n\n  if(command === \"help\") {\n    chat(\"Commands:\");\n    Object.keys(commands).forEach(name => {\n      chat(\"`!\" + name + \"`: \" + commands[name]);\n    });\n  }\n  \n  if(command === \"simon-says\") {\n    if(args.length < 1) return chat(\"Use it like this: `!simon-says <message>`\");\n    chat(args.join(\" \"))\n  }\n\n  if(command === \"bot\") {\n    if(args.length > 0) {\n      if(args[0] === \"help\") {\n        chat(\"Bot Commands:\");\n        Object.keys(botCommands).forEach(name => {\n          chat(\"`!\" + name + \"`: \" + botCommands[name]);\n        });\n      }\n      if(args[0] === \"reset\") {\n        const data = await resetBot(auth);\n        privChat(\"Your new token is: `\" + data.token + \"`\", sender);\n      }\n      if(args[0] === \"info\") {\n        const data = await getBot(auth);\n        privChat(\"Bot Info:\", sender);\n        privChat(\"Name: \" + data.name, sender);\n        privChat(\"Id: \" + data.creatorId, sender);\n        privChat(\"Creator: \" + data.creatorName, sender);\n      }\n      if(args[0] === \"rename\") {\n        if(args.length > 1) {\n          args.shift();\n          const data = await renameBot(auth, args.join(\" \"));\n          privChat(\"Changed the bots name to: `\" + data.name + \"`\", sender);\n        } else {\n          privChat(\"Usage: `!bot rename <name>`\", sender);\n        }\n      }\n      return;\n    }\n    \n    const data = await getBot(auth);\n\n    privChat(\"Your bot token is: `\" + data.token + \"`\", sender);\n    privChat(\"[Click here to see a tutorial on how to make a bot](https://replit.com/@SzymonPL188/Ripl-Bot-Example)\", sender);\n  }\n\n  if(command === \"tip\") {\n    let random = Math.floor(Math.random() * tips.length);\n    chat(tips[random]);\n  }\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAuB;AACvB,wBAA6C;AAE7C,yBAA4C;AAE5C,MAAM,SAAS;AAUR,cAAc,SAAiB;AACpC,QAAM,IAAI;AAAA,IACR,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,aAAa;AAAA,IACb,WAAW,KAAK;AAAA;AAElB,kBAAG,KAAK,WAAW;AACnB,iCAAa,KAAK;AAAA;AAGpB,IAAI,OAAO;AAAA,EACT;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAGF,MAAM,WAAW;AAAA,EACf,QAAQ;AAAA,EACR,wBAAwB;AAAA,EACxB,OAAO;AAAA,EACP,YAAY;AAAA;AAGd,MAAM,cAAc;AAAA,EAClB,YAAY;AAAA,EACZ,OAAO;AAAA,EACP,qBAAqB;AAAA,EACrB,aAAa;AAAA,EACb,YAAY;AAAA;AAGP,kBAAkB,SAAiB,QAAgB;AACxD,QAAM,IAAI;AAAA,IACR,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,aAAa;AAAA,IACb,WAAW,KAAK;AAAA,IAChB,KAAK;AAAA;AAEP,SAAO,KAAK,WAAW;AAAA;AAGzB,yBAAgC,SAAsB,QAAgB,MAAsB;AAC1F,MAAG,CAAC,QAAQ,QAAQ,WAAW;AAAS;AACxC,MAAI,OAAO,QAAQ,QAAQ,UAAU,GAAG,MAAM;AAC9C,MAAI,UAAU,KAAK;AAEnB,MAAG,YAAY,QAAQ;AACrB,SAAK;AACL,WAAO,KAAK,UAAU,QAAQ,UAAQ;AACpC,WAAK,OAAO,OAAO,QAAQ,SAAS;AAAA;AAAA;AAIxC,MAAG,YAAY,cAAc;AAC3B,QAAG,KAAK,SAAS;AAAG,aAAO,KAAK;AAChC,SAAK,KAAK,KAAK;AAAA;AAGjB,MAAG,YAAY,OAAO;AACpB,QAAG,KAAK,SAAS,GAAG;AAClB,UAAG,KAAK,OAAO,QAAQ;AACrB,aAAK;AACL,eAAO,KAAK,aAAa,QAAQ,UAAQ;AACvC,eAAK,OAAO,OAAO,QAAQ,YAAY;AAAA;AAAA;AAG3C,UAAG,KAAK,OAAO,SAAS;AACtB,cAAM,QAAO,MAAM,iCAAS;AAC5B,iBAAS,yBAAyB,MAAK,QAAQ,KAAK;AAAA;AAEtD,UAAG,KAAK,OAAO,QAAQ;AACrB,cAAM,QAAO,MAAM,+BAAO;AAC1B,iBAAS,aAAa;AACtB,iBAAS,WAAW,MAAK,MAAM;AAC/B,iBAAS,SAAS,MAAK,WAAW;AAClC,iBAAS,cAAc,MAAK,aAAa;AAAA;AAE3C,UAAG,KAAK,OAAO,UAAU;AACvB,YAAG,KAAK,SAAS,GAAG;AAClB,eAAK;AACL,gBAAM,QAAO,MAAM,kCAAU,MAAM,KAAK,KAAK;AAC7C,mBAAS,gCAAgC,MAAK,OAAO,KAAK;AAAA,eACrD;AACL,mBAAS,+BAA+B;AAAA;AAAA;AAG5C;AAAA;AAGF,UAAM,OAAO,MAAM,+BAAO;AAE1B,aAAS,yBAAyB,KAAK,QAAQ,KAAK;AACpD,aAAS,yGAAyG;AAAA;AAGpH,MAAG,YAAY,OAAO;AACpB,QAAI,SAAS,KAAK,MAAM,KAAK,WAAW,KAAK;AAC7C,SAAK,KAAK;AAAA;AAAA;",
  "names": []
}
