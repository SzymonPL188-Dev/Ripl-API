{
  "version": 3,
  "sources": ["../BotRegistry.ts"],
  "sourcesContent": ["import { ReplitUserData } from \"./Connection\";\nimport { db } from \"./index\";\nimport { v4 as uuid } from 'uuid';\n\ninterface BotData {\n  name: string;\n  creatorId: number;\n  creatorName: string;\n  token: string;\n}\n\nexport async function getBot(user: ReplitUserData) {\n  let rsp = await db.get(`bot-${user.id}`);\n  if(rsp) {\n    return JSON.parse(rsp);\n  } else {\n    let botToken = uuid() + \"-\" + uuid();\n\n    let data: BotData = {\n      name: `${user.name}'s bot`,\n      creatorId: user.id,\n      creatorName: user.name,\n      token: botToken\n    };\n\n    await db.set(`bot-${user.id}`, JSON.stringify(data));\n    await db.set(`bot-token-${botToken}`, `bot-${user.id}`);\n    return data;\n  }\n}\n\nexport async function getBotByToken(token: string) {\n  let bot = await db.get(`bot-token-${token}`);\n  if(bot) {\n    let fin = await db.get(bot);\n    fin = JSON.parse(fin);\n    return fin;\n  } else {\n    return null;\n  }\n}\n\nexport async function resetBot(user: ReplitUserData) {\n  let botToken = uuid() + \"-\" + uuid();\n  let data = await getBot(user);\n  await db.delete(`bot-token-${data.token}`)\n  data.token = botToken;\n  await db.set(`bot-token-${botToken}`, `bot-${user.id}`);\n  await db.set(`bot-${user.id}`, JSON.stringify(data));\n  return data;\n}\n\nexport async function renameBot(user: ReplitUserData, name: string) {\n  let botData = await getBot(user);\n  botData.name = name;\n  await db.set(`bot-${user.id}`, JSON.stringify(botData));\n  return botData;\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,mBAAmB;AACnB,kBAA2B;AAS3B,sBAA6B,MAAsB;AACjD,MAAI,MAAM,MAAM,gBAAG,IAAI,OAAO,KAAK;AACnC,MAAG,KAAK;AACN,WAAO,KAAK,MAAM;AAAA,SACb;AACL,QAAI,WAAW,wBAAS,MAAM;AAE9B,QAAI,OAAgB;AAAA,MAClB,MAAM,GAAG,KAAK;AAAA,MACd,WAAW,KAAK;AAAA,MAChB,aAAa,KAAK;AAAA,MAClB,OAAO;AAAA;AAGT,UAAM,gBAAG,IAAI,OAAO,KAAK,MAAM,KAAK,UAAU;AAC9C,UAAM,gBAAG,IAAI,aAAa,YAAY,OAAO,KAAK;AAClD,WAAO;AAAA;AAAA;AAIX,6BAAoC,OAAe;AACjD,MAAI,MAAM,MAAM,gBAAG,IAAI,aAAa;AACpC,MAAG,KAAK;AACN,QAAI,MAAM,MAAM,gBAAG,IAAI;AACvB,UAAM,KAAK,MAAM;AACjB,WAAO;AAAA,SACF;AACL,WAAO;AAAA;AAAA;AAIX,wBAA+B,MAAsB;AACnD,MAAI,WAAW,wBAAS,MAAM;AAC9B,MAAI,OAAO,MAAM,OAAO;AACxB,QAAM,gBAAG,OAAO,aAAa,KAAK;AAClC,OAAK,QAAQ;AACb,QAAM,gBAAG,IAAI,aAAa,YAAY,OAAO,KAAK;AAClD,QAAM,gBAAG,IAAI,OAAO,KAAK,MAAM,KAAK,UAAU;AAC9C,SAAO;AAAA;AAGT,yBAAgC,MAAsB,MAAc;AAClE,MAAI,UAAU,MAAM,OAAO;AAC3B,UAAQ,OAAO;AACf,QAAM,gBAAG,IAAI,OAAO,KAAK,MAAM,KAAK,UAAU;AAC9C,SAAO;AAAA;",
  "names": []
}
