{
  "version": 3,
  "sources": ["../Connection.ts"],
  "sourcesContent": ["import {Socket} from \"socket.io\";\nimport * as SystemBot from \"./SystemBot\";\nimport { io } from \"./index\";\nimport Filter from \"bad-words\";\n\nexport let messageCache: any[] = [];\n\nexport const filter = new Filter({ placeHolder: '@'});\n\nexport function setMessages(m: any[]) {\n  messageCache = m;\n}\n\nfunction isMessageValid(message: string) {\n  let valid = true;\n\n  let formatted = message.replaceAll(\" \" , \"\").toLowerCase();\n  if (formatted.length < 1 || message.length > 300) {\n    valid = false;\n  }\n  \n  return valid;\n}\n\nexport interface ReplitUserData {\n  id: number,\n  name: string,\n  profileImage: string,\n  roles: string[],\n  teams: string[],\n  url: string\n}\n\nexport default class Connection {\n  socket: Socket;\n  constructor(socket: Socket) {\n    let muted = false;\n    let banned = false;\n\n    function mute(set: boolean) {\n      muted = set;\n      socket.emit(\"mute\", muted);\n    }\n\n    function alert(title: string, message: string) {\n      let alert = {\n        title: title,\n        message: message\n      }\n      socket.emit(\"alert\", alert);\n    }\n\n    let lastMessage = 0;\n    let fastMessageStreak = 0;\n    \n    this.socket = socket;\n\n    let auth: ReplitUserData | null = null;\n\n    try {\n      auth = JSON.parse(String(this.socket.handshake.query.auth));\n    } catch(e) {\n      socket.disconnect();\n      return\n    }\n\n    this.socket.emit(\"messages\", messageCache.slice(-150));\n    \n    if(banned) {\n      SystemBot.privChat(\"# Uh oh\", socket);\n      SystemBot.privChat(\"### Looks like you have been banned\", socket);\n      alert(\"The ban hammer has spoken\", \"You have been banned from ripl\");\n      mute(true);\n    }\n    \n    this.socket.on(\"message\", (data) => {\n      if(muted || banned) return;\n      if(typeof data !== \"string\") return;\n      if(!isMessageValid(data)) return;\n      const message: SystemBot.MessageData = {\n        sender: auth?.name!,\n        senderImage: auth?.profileImage!,\n        content: filter.clean(data),\n        timestamp: Date.now(),\n        bot: false\n      }\n      if(Date.now() - lastMessage > 2000) {\n        fastMessageStreak = 0;\n      }\n      if(Date.now() - lastMessage < 750) {\n        fastMessageStreak ++;\n      }\n      if(fastMessageStreak > 5) {\n        mute(true);\n        alert(\"Woah!\", \"You're getting too fast. Please slow down. **You got muted for 10 seconds**\");\n        setTimeout(() => {\n          mute(false);\n        }, 10000);\n      }\n      lastMessage = Date.now();\n      this.socket.broadcast.emit(\"message\", message);\n      messageCache.push(message);\n      \n      SystemBot.onMessage(message, socket, auth);\n\n      if(messageCache.length > 200) {\n        while(messageCache.length > 200) {\n          messageCache.splice(0, 1);\n        }\n      }\n    });\n    // this.socket.on(\"image\", (base64: string) => {\n    //   if(muted || banned) return;\n    //   console.log(base64.substring(0, 100))\n    //   if(base64.startsWith(\"data:image/jpeg;\")) {\n    //     const buffer = Buffer.from(base64.substring(base64.indexOf(',') + 1));\n    //     const sizeMb = (buffer.length * 0.000001);\n    //     if(sizeMb > 1) {\n    //       alert(\"Upload failed!\", \"The image you're sending is bigger than 1 Mb\");\n    //       return;\n    //     }\n    //     // const m = {\n    //     //   content: `![Image upload](${base64})`,\n    //     //   sender: auth?.name,\n    //     //   senderImage: auth?.profileImage,\n    //     //   timestamp: Date.now()\n    //     // }\n    //     // io.emit(\"message\", m);\n    //     // messageCache.push(m);\n    //   }\n    // });\n  }\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAA2B;AAE3B,uBAAmB;AAEZ,IAAI,eAAsB;AAE1B,MAAM,SAAS,IAAI,yBAAO,EAAE,aAAa;AAEzC,qBAAqB,GAAU;AACpC,iBAAe;AAAA;AAGjB,wBAAwB,SAAiB;AACvC,MAAI,QAAQ;AAEZ,MAAI,YAAY,QAAQ,WAAW,KAAM,IAAI;AAC7C,MAAI,UAAU,SAAS,KAAK,QAAQ,SAAS,KAAK;AAChD,YAAQ;AAAA;AAGV,SAAO;AAAA;AAYT,iBAAgC;AAAA,EAC9B;AAAA,EACA,YAAY,QAAgB;AAC1B,QAAI,QAAQ;AACZ,QAAI,SAAS;AAEb,kBAAc,KAAc;AAC1B,cAAQ;AACR,aAAO,KAAK,QAAQ;AAAA;AAGtB,mBAAe,OAAe,SAAiB;AAC7C,UAAI,SAAQ;AAAA,QACV;AAAA,QACA;AAAA;AAEF,aAAO,KAAK,SAAS;AAAA;AAGvB,QAAI,cAAc;AAClB,QAAI,oBAAoB;AAExB,SAAK,SAAS;AAEd,QAAI,OAA8B;AAElC,QAAI;AACF,aAAO,KAAK,MAAM,OAAO,KAAK,OAAO,UAAU,MAAM;AAAA,aAC/C,GAAN;AACA,aAAO;AACP;AAAA;AAGF,SAAK,OAAO,KAAK,YAAY,aAAa,MAAM;AAEhD,QAAG,QAAQ;AACT,gBAAU,SAAS,WAAW;AAC9B,gBAAU,SAAS,uCAAuC;AAC1D,YAAM,6BAA6B;AACnC,WAAK;AAAA;AAGP,SAAK,OAAO,GAAG,WAAW,CAAC,SAAS;AAClC,UAAG,SAAS;AAAQ;AACpB,UAAG,OAAO,SAAS;AAAU;AAC7B,UAAG,CAAC,eAAe;AAAO;AAC1B,YAAM,UAAiC;AAAA,QACrC,QAAQ,6BAAM;AAAA,QACd,aAAa,6BAAM;AAAA,QACnB,SAAS,OAAO,MAAM;AAAA,QACtB,WAAW,KAAK;AAAA,QAChB,KAAK;AAAA;AAEP,UAAG,KAAK,QAAQ,cAAc,KAAM;AAClC,4BAAoB;AAAA;AAEtB,UAAG,KAAK,QAAQ,cAAc,KAAK;AACjC;AAAA;AAEF,UAAG,oBAAoB,GAAG;AACxB,aAAK;AACL,cAAM,SAAS;AACf,mBAAW,MAAM;AACf,eAAK;AAAA,WACJ;AAAA;AAEL,oBAAc,KAAK;AACnB,WAAK,OAAO,UAAU,KAAK,WAAW;AACtC,mBAAa,KAAK;AAElB,gBAAU,UAAU,SAAS,QAAQ;AAErC,UAAG,aAAa,SAAS,KAAK;AAC5B,eAAM,aAAa,SAAS,KAAK;AAC/B,uBAAa,OAAO,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;",
  "names": []
}
